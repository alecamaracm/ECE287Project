
//--  This file was automatically generated by the PowerPoint2Verilog compiler. Please do not change anything and use the compiler instead --//

module PP2VerilogDrawingController(CLOCK,reset,animationCLOCK,wasd,arrows,xPixel,yPixel,VGAr,VGAg,VGAb,mouseX,mouseY,fakeX,fakeY,LOSEBOXX,LOSEBOXY,BACK2X,BACK2Y,BACK1X,BACK1Y,PIPEDOWN1X,PIPEDOWN1Y,pointX,pointY,PIPEUP1X,PIPEUP1Y,birdX,birdY,colpower,coltuberias,PIPEDOWN1VISIBLE,PIPEUP1SKIPY,PIPEUP1VISIBLE,cloud1sp,h1VISIBLE,h2VISIBLE,h3VISIBLE,cloud2sp,birdsp,go1VISIBLE,go2VISIBLE,BACK2SKIPX,BACK1SKIPX,);

input CLOCK;
input animationCLOCK;
input [3:0]wasd;
input [3:0]arrows;
input [9:0]xPixel;
input[8:0]yPixel;
input [10:0]mouseX;
input [10:0]mouseY;
output [7:0]VGAr;
output [7:0]VGAg;
output [7:0]VGAb;
reg [7:0]VGAr;
reg [7:0]VGAg;
reg [7:0]VGAb;
input reset;
input [9:0]PIPEDOWN1VISIBLE;
input [9:0]PIPEUP1SKIPY;
input [9:0]PIPEUP1VISIBLE;
input [9:0]cloud1sp;
input [9:0]h1VISIBLE;
input [9:0]h2VISIBLE;
input [9:0]h3VISIBLE;
input [9:0]cloud2sp;
input [9:0]birdsp;
input [9:0]go1VISIBLE;
input [9:0]go2VISIBLE;
input [9:0]BACK2SKIPX;
input [9:0]BACK1SKIPX;
output colpower;
output coltuberias;
input [9:0]fakeX;
input [9:0]fakeY;
input [9:0]LOSEBOXX;
input [9:0]LOSEBOXY;
input [9:0]BACK2X;
input [9:0]BACK2Y;
input [9:0]BACK1X;
input [9:0]BACK1Y;
input [9:0]PIPEDOWN1X;
input [9:0]PIPEDOWN1Y;
input [9:0]pointX;
input [9:0]pointY;
input [9:0]PIPEUP1X;
input [9:0]PIPEUP1Y;
input [9:0]birdX;
input [9:0]birdY;

always @(*)
begin

	//Writing backgound color
	VGAr = 8'b11111111;
	VGAg = 8'b11111111; 
	VGAb = 8'b11111111; 

	if(yPixel>=BACK2Y && yPixel<BACK2Y+(98*5) && xPixel>=BACK2X+1 && xPixel<BACK2X+(128*5-BACK2SKIPX) && BACK2q[15]==1'b1)
	begin
		VGAr=BACK2q[14:10]*8;
		VGAg=BACK2q[9:5]*8;
		VGAb=BACK2q[4:0]*8;
	end

	if(yPixel>=BACK1Y && yPixel<BACK1Y+(98*5) && xPixel>=BACK1X+1 && xPixel<BACK1X+(130*5-BACK1SKIPX) && BACK1q[15]==1'b1)
	begin
		VGAr=BACK1q[14:10]*8;
		VGAg=BACK1q[9:5]*8;
		VGAb=BACK1q[4:0]*8;
	end

	if(PIPEDOWN1VISIBLE && yPixel>=PIPEDOWN1Y && yPixel<PIPEDOWN1Y+(201*2) && xPixel>=PIPEDOWN1X+1 && xPixel<PIPEDOWN1X+(33*2) && PIPEDOWN1q[15]==1'b1)
	begin
		VGAr=PIPEDOWN1q[14:10]*8;
		VGAg=PIPEDOWN1q[9:5]*8;
		VGAb=PIPEDOWN1q[4:0]*8;
	end

	if(yPixel>=pointY && yPixel<pointY+(48*1) && xPixel>=pointX+1 && xPixel<pointX+(32*1) && pointq[15]==1'b1)
	begin
		VGAr=pointq[14:10]*8;
		VGAg=pointq[9:5]*8;
		VGAb=pointq[4:0]*8;
	end

	if(PIPEUP1VISIBLE && yPixel>=PIPEUP1Y && yPixel<PIPEUP1Y+(201*2)-PIPEUP1SKIPY && xPixel>=PIPEUP1X+1 && xPixel<PIPEUP1X+(33*2) && PIPEUP1q[15]==1'b1)
	begin
		VGAr=PIPEUP1q[14:10]*8;
		VGAg=PIPEUP1q[9:5]*8;
		VGAb=PIPEUP1q[4:0]*8;
	end

	//Drawing Solid shape "LEFTBOX"
	if(xPixel>=0 && xPixel<=73 && yPixel>=0 && yPixel<=480)
	begin
		VGAr = 8'b00101111;
		VGAg = 8'b01010101;
		VGAb = 8'b10010111;
		if(xPixel<3 || xPixel>70 || yPixel<3 || yPixel>477)    //Drawing border
		begin
			VGAr = 8'b00100010;
			VGAg = 8'b00101010;
			VGAb = 8'b00110101;
		end
	end

	if(yPixel>=cloud1Y && yPixel<cloud1Y+(33*1) && xPixel>=cloud1X+1 && xPixel<cloud1X+(31*1) && cloud1q[15]==1'b1)
	begin
		VGAr=cloud1q[14:10]*8;
		VGAg=cloud1q[9:5]*8;
		VGAb=cloud1q[4:0]*8;
	end

	if(h1VISIBLE && yPixel>=h1Y && yPixel<h1Y+(53*1) && xPixel>=h1X+1 && xPixel<h1X+(58*1) && h1q[15]==1'b1)
	begin
		VGAr=h1q[14:10]*8;
		VGAg=h1q[9:5]*8;
		VGAb=h1q[4:0]*8;
	end

	if(h2VISIBLE && yPixel>=h2Y && yPixel<h2Y+(53*1) && xPixel>=h2X+1 && xPixel<h2X+(58*1) && h2q[15]==1'b1)
	begin
		VGAr=h2q[14:10]*8;
		VGAg=h2q[9:5]*8;
		VGAb=h2q[4:0]*8;
	end

	if(h3VISIBLE && yPixel>=h3Y && yPixel<h3Y+(53*1) && xPixel>=h3X+1 && xPixel<h3X+(58*1) && h3q[15]==1'b1)
	begin
		VGAr=h3q[14:10]*8;
		VGAg=h3q[9:5]*8;
		VGAb=h3q[4:0]*8;
	end

	if(yPixel>=cloud2Y && yPixel<cloud2Y+(33*1) && xPixel>=cloud2X+1 && xPixel<cloud2X+(31*1) && cloud2q[15]==1'b1)
	begin
		VGAr=cloud2q[14:10]*8;
		VGAg=cloud2q[9:5]*8;
		VGAb=cloud2q[4:0]*8;
	end

	if(yPixel>=birdY && yPixel<birdY+(62*1) && xPixel>=birdX+1 && xPixel<birdX+(79*1) && birdq[15]==1'b1)
	begin
		VGAr=birdq[14:10]*8;
		VGAg=birdq[9:5]*8;
		VGAb=birdq[4:0]*8;
	end

	//Drawing Solid shape "LOSEBOX"
	if(xPixel>=LOSEBOXX && xPixel<=LOSEBOXX+468 && yPixel>=LOSEBOXY && yPixel<=LOSEBOXY+322)
	begin
		VGAr = 8'b01110110;
		VGAg = 8'b01110001;
		VGAb = 8'b01110001;
		if(xPixel<LOSEBOXX+3 || xPixel>LOSEBOXX+465 || yPixel<LOSEBOXY+3 || yPixel>LOSEBOXY+319)    //Drawing border
		begin
			VGAr = 8'b00011000;
			VGAg = 8'b00010111;
			VGAb = 8'b00010111;
		end
	end

	if(go1VISIBLE && yPixel>=go1Y && yPixel<go1Y+(62*2) && xPixel>=go1X+1 && xPixel<go1X+(204*2) && go1q[15]==1'b1)
	begin
		VGAr=go1q[14:10]*8;
		VGAg=go1q[9:5]*8;
		VGAb=go1q[4:0]*8;
	end

	if(go2VISIBLE && yPixel>=go2Y && yPixel<go2Y+(61*2) && xPixel>=go2X+1 && xPixel<go2X+(203*2) && go2q[15]==1'b1)
	begin
		VGAr=go2q[14:10]*8;
		VGAg=go2q[9:5]*8;
		VGAb=go2q[4:0]*8;
	end

end

wire [9:0]cloud1X;
wire [9:0]cloud1Y;
wire [9:0]h1X;
wire [9:0]h1Y;
wire [9:0]h2X;
wire [9:0]h2Y;
wire [9:0]h3X;
wire [9:0]h3Y;
wire [9:0]cloud2X;
wire [9:0]cloud2Y;
wire [9:0]go1X;
wire [9:0]go1Y;
wire [9:0]go2X;
wire [9:0]go2Y;
wire [9:0]PIPEDOWN1VISIBLE;
wire [9:0]PIPEUP1SKIPY;
wire [9:0]PIPEUP1VISIBLE;
wire [9:0]cloud1sp;
wire [9:0]h1VISIBLE;
wire [9:0]h2VISIBLE;
wire [9:0]h3VISIBLE;
wire [9:0]cloud2sp;
wire [9:0]birdsp;
wire [9:0]go1VISIBLE;
wire [9:0]go2VISIBLE;
wire [9:0]BACK2SKIPX;
wire [9:0]BACK1SKIPX;


animations anim1(animationCLOCK,reset,wasd,arrows,cloud1X,cloud1Y,h1X,h1Y,h2X,h2Y,h3X,h3Y,cloud2X,cloud2Y,go1X,go1Y,go2X,go2Y,);
wire [15:0]BACK2q;
ramBACK2 BACK2ram((((yPixel-BACK2Y+BACK2SKIPY)/5)*(128) +(((xPixel-BACK2X)/5))+(BACK2SKIPX/5)+((128)*(BACK2sp))),CLOCK,16'd0,0,BACK2q);
wire [15:0]BACK1q;
ramBACK1 BACK1ram((((yPixel-BACK1Y+BACK1SKIPY)/5)*(130) +(((xPixel-BACK1X)/5))+(BACK1SKIPX/5)+((130)*(BACK1sp))),CLOCK,16'd0,0,BACK1q);
wire [15:0]PIPEDOWN1q;
ramPIPEDOWN1 PIPEDOWN1ram((((yPixel-PIPEDOWN1Y+PIPEDOWN1SKIPY)/2)*(33) +(((xPixel-PIPEDOWN1X)/2))+(PIPEDOWN1SKIPX/2)+((33)*(PIPEDOWN1sp))),CLOCK,16'd0,0,PIPEDOWN1q);
wire [15:0]pointq;
rampoint pointram((((yPixel-pointY+pointSKIPY)/1)*(32) +(((xPixel-pointX)/1))+(pointSKIPX/1)+((32)*(pointsp))),CLOCK,16'd0,0,pointq);
wire [15:0]PIPEUP1q;
ramPIPEUP1 PIPEUP1ram((((yPixel-PIPEUP1Y+PIPEUP1SKIPY)/2)*(33) +(((xPixel-PIPEUP1X)/2))+(PIPEUP1SKIPX/2)+((33)*(PIPEUP1sp))),CLOCK,16'd0,0,PIPEUP1q);
wire [15:0]cloud1q;
ramcloud1 cloud1ram((((yPixel-cloud1Y+cloud1SKIPY)/1)*(93) +(((xPixel-cloud1X)/1))+(cloud1SKIPX/1)+((31)*(cloud1sp))),CLOCK,16'd0,0,cloud1q);
wire [15:0]h1q;
ramh1 h1ram((((yPixel-h1Y+h1SKIPY)/1)*(58) +(((xPixel-h1X)/1))+(h1SKIPX/1)+((58)*(h1sp))),CLOCK,16'd0,0,h1q);
wire [15:0]h2q;
ramh2 h2ram((((yPixel-h2Y+h2SKIPY)/1)*(58) +(((xPixel-h2X)/1))+(h2SKIPX/1)+((58)*(h2sp))),CLOCK,16'd0,0,h2q);
wire [15:0]h3q;
ramh3 h3ram((((yPixel-h3Y+h3SKIPY)/1)*(58) +(((xPixel-h3X)/1))+(h3SKIPX/1)+((58)*(h3sp))),CLOCK,16'd0,0,h3q);
wire [15:0]cloud2q;
ramcloud2 cloud2ram((((yPixel-cloud2Y+cloud2SKIPY)/1)*(93) +(((xPixel-cloud2X)/1))+(cloud2SKIPX/1)+((31)*(cloud2sp))),CLOCK,16'd0,0,cloud2q);
wire [15:0]birdq;
rambird birdram((((yPixel-birdY+birdSKIPY)/1)*(952) +(((xPixel-birdX)/1))+(birdSKIPX/1)+((79)*(birdsp))),CLOCK,16'd0,0,birdq);
wire [15:0]go1q;
ramgo1 go1ram((((yPixel-go1Y+go1SKIPY)/2)*(204) +(((xPixel-go1X)/2))+(go1SKIPX/2)+((204)*(go1sp))),CLOCK,16'd0,0,go1q);
wire [15:0]go2q;
ramgo2 go2ram((((yPixel-go2Y+go2SKIPY)/2)*(203) +(((xPixel-go2X)/2))+(go2SKIPX/2)+((203)*(go2sp))),CLOCK,16'd0,0,go2q);

	assign coltuberias=((birdY+62>PIPEDOWN1Y) && PIPEDOWN1VISIBLE &&(birdY<PIPEDOWN1Y+402-PIPEDOWN1SKIPY) && (birdX+79>PIPEDOWN1X) && (birdX<PIPEDOWN1X+67))||((birdY+62>PIPEUP1Y) && PIPEUP1VISIBLE &&(birdY<PIPEUP1Y+402-PIPEUP1SKIPY) && (birdX+79>PIPEUP1X) && (birdX<PIPEUP1X+67));
	assign colpower=((fakeY+63>cloud1Y) && (fakeY<cloud1Y+33-cloud1SKIPY) && (fakeX+73>cloud1X) && (fakeX<cloud1X+31))||((fakeY+63>cloud2Y) && (fakeY<cloud2Y+33-cloud2SKIPY) && (fakeX+73>cloud2X) && (fakeX<cloud2X+31));

endmodule

module animations(animationCLOCK,reset,wasd,arrows,cloud1X,cloud1Y,h1X,h1Y,h2X,h2Y,h3X,h3Y,cloud2X,cloud2Y,go1X,go1Y,go2X,go2Y,);

input reset;
output [9:0]cloud1X;
reg [9:0]cloud1X;
reg cloud1XDir;
output [9:0]cloud1Y;
reg [9:0]cloud1Y;
reg cloud1YDir;
output [9:0]h1X;
reg [9:0]h1X;
reg h1XDir;
output [9:0]h1Y;
reg [9:0]h1Y;
reg h1YDir;
output [9:0]h2X;
reg [9:0]h2X;
reg h2XDir;
output [9:0]h2Y;
reg [9:0]h2Y;
reg h2YDir;
output [9:0]h3X;
reg [9:0]h3X;
reg h3XDir;
output [9:0]h3Y;
reg [9:0]h3Y;
reg h3YDir;
output [9:0]cloud2X;
reg [9:0]cloud2X;
reg cloud2XDir;
output [9:0]cloud2Y;
reg [9:0]cloud2Y;
reg cloud2YDir;
output [9:0]go1X;
reg [9:0]go1X;
reg go1XDir;
output [9:0]go1Y;
reg [9:0]go1Y;
reg go1YDir;
output [9:0]go2X;
reg [9:0]go2X;
reg go2XDir;
output [9:0]go2Y;
reg [9:0]go2Y;
reg go2YDir;
input animationCLOCK;
input [3:0]arrows;
input [3:0]wasd;
reg initilized;

initial begin
	cloud1X=181;
	cloud1Y=42;
	h1X=7;
	h1Y=25;
	h2X=7;
	h2Y=91;
	h3X=7;
	h3Y=158;
	cloud2X=362;
	cloud2Y=124;
	go1X=130;
	go1Y=175;
	go2X=132;
	go2Y=177;
end


always @ (posedge animationCLOCK)
begin


	//Writing Bouncing movement for cloud1X:
	if(cloud1XDir==1)
	begin
		if (cloud1X >= 510 - 31)
		begin
			cloud1XDir = 0;
		end
		else
		begin
			cloud1X <= cloud1X + 1;
		end
	end
	else
	begin
		if (cloud1X <= 225)
		begin
			cloud1XDir = 1;
		end
		else
		begin
			cloud1X <= cloud1X - 1;
		end
	end
	if(cloud1YDir==1)
	begin
		if (cloud1Y >= 120 - 33)
		begin
			cloud1YDir = 0;
		end
		else
		begin
			cloud1Y <= cloud1Y + 1;
		end
	end
	else
	begin
		if (cloud1Y <= 20)
		begin
			cloud1YDir = 1;
		end
		else
		begin
			cloud1Y <= cloud1Y - 1;
		end
	end
	//Writing Bouncing movement for h1X:
	if(h1XDir==1)
	begin
		if (h1X >= 580 - 58)
		begin
			h1XDir = 0;
		end
		else
		begin
			h1X <= h1X + 0;
		end
	end
	else
	begin
		if (h1X <= 125)
		begin
			h1XDir = 1;
		end
		else
		begin
			h1X <= h1X - 0;
		end
	end
	if(h1YDir==1)
	begin
		if (h1Y >= 150 - 53)
		begin
			h1YDir = 0;
		end
		else
		begin
			h1Y <= h1Y + 0;
		end
	end
	else
	begin
		if (h1Y <= 40)
		begin
			h1YDir = 1;
		end
		else
		begin
			h1Y <= h1Y - 0;
		end
	end
	//Writing Bouncing movement for h2X:
	if(h2XDir==1)
	begin
		if (h2X >= 580 - 58)
		begin
			h2XDir = 0;
		end
		else
		begin
			h2X <= h2X + 0;
		end
	end
	else
	begin
		if (h2X <= 125)
		begin
			h2XDir = 1;
		end
		else
		begin
			h2X <= h2X - 0;
		end
	end
	if(h2YDir==1)
	begin
		if (h2Y >= 150 - 53)
		begin
			h2YDir = 0;
		end
		else
		begin
			h2Y <= h2Y + 0;
		end
	end
	else
	begin
		if (h2Y <= 40)
		begin
			h2YDir = 1;
		end
		else
		begin
			h2Y <= h2Y - 0;
		end
	end
	//Writing Bouncing movement for h3X:
	if(h3XDir==1)
	begin
		if (h3X >= 580 - 58)
		begin
			h3XDir = 0;
		end
		else
		begin
			h3X <= h3X + 0;
		end
	end
	else
	begin
		if (h3X <= 125)
		begin
			h3XDir = 1;
		end
		else
		begin
			h3X <= h3X - 0;
		end
	end
	if(h3YDir==1)
	begin
		if (h3Y >= 150 - 53)
		begin
			h3YDir = 0;
		end
		else
		begin
			h3Y <= h3Y + 0;
		end
	end
	else
	begin
		if (h3Y <= 40)
		begin
			h3YDir = 1;
		end
		else
		begin
			h3Y <= h3Y - 0;
		end
	end
	//Writing Bouncing movement for cloud2X:
	if(cloud2XDir==1)
	begin
		if (cloud2X >= 510 - 31)
		begin
			cloud2XDir = 0;
		end
		else
		begin
			cloud2X <= cloud2X + 3;
		end
	end
	else
	begin
		if (cloud2X <= 225)
		begin
			cloud2XDir = 1;
		end
		else
		begin
			cloud2X <= cloud2X - 3;
		end
	end
	if(cloud2YDir==1)
	begin
		if (cloud2Y >= 120 - 33)
		begin
			cloud2YDir = 0;
		end
		else
		begin
			cloud2Y <= cloud2Y + 3;
		end
	end
	else
	begin
		if (cloud2Y <= 20)
		begin
			cloud2YDir = 1;
		end
		else
		begin
			cloud2Y <= cloud2Y - 3;
		end
	end
	//Writing Bouncing movement for go1X:
	if(go1XDir==1)
	begin
		if (go1X >= 580 - 409)
		begin
			go1XDir = 0;
		end
		else
		begin
			go1X <= go1X + 0;
		end
	end
	else
	begin
		if (go1X <= 125)
		begin
			go1XDir = 1;
		end
		else
		begin
			go1X <= go1X - 0;
		end
	end
	if(go1YDir==1)
	begin
		if (go1Y >= 150 - 124)
		begin
			go1YDir = 0;
		end
		else
		begin
			go1Y <= go1Y + 0;
		end
	end
	else
	begin
		if (go1Y <= 40)
		begin
			go1YDir = 1;
		end
		else
		begin
			go1Y <= go1Y - 0;
		end
	end
	//Writing Bouncing movement for go2X:
	if(go2XDir==1)
	begin
		if (go2X >= 580 - 406)
		begin
			go2XDir = 0;
		end
		else
		begin
			go2X <= go2X + 0;
		end
	end
	else
	begin
		if (go2X <= 125)
		begin
			go2XDir = 1;
		end
		else
		begin
			go2X <= go2X - 0;
		end
	end
	if(go2YDir==1)
	begin
		if (go2Y >= 150 - 122)
		begin
			go2YDir = 0;
		end
		else
		begin
			go2Y <= go2Y + 0;
		end
	end
	else
	begin
		if (go2Y <= 40)
		begin
			go2YDir = 1;
		end
		else
		begin
			go2Y <= go2Y - 0;
		end
	end
end

endmodule
